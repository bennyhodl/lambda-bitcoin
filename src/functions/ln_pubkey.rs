use arc_lightning_client::{error::LightningError, lightning::LightningClient, lnd::LndClient};
use lambda_http::{service_fn, Body, Error, Response};

async fn get_ln_pubkey() -> Result<Response<Body>, Error> {
    let mut client = LndClient::new("http://localhost:10002", "2d2d2d2d2d424547494e2043455254494649434154452d2d2d2d2d0a4d4949434854434341634f674177494241674952414b524b575855746e6944336f38687144696c366d704577436759494b6f5a497a6a3045417749774c7a45660a4d4230474131554543684d576247356b494746316447396e5a57356c636d46305a575167593256796444454d4d416f474131554541784d44596d39694d4234580a4454497a4d4467784d7a45354d6a6b774e466f58445449304d5441774e7a45354d6a6b774e466f774c7a45664d4230474131554543684d576247356b494746310a6447396e5a57356c636d46305a575167593256796444454d4d416f474131554541784d44596d39694d466b77457759484b6f5a497a6a3043415159494b6f5a490a7a6a304441516344516741455a3377626244756d4a676b4d7532437a4366387a6a68472b4152793378734a3854393163353932503771757539524d6b446674730a6f723567596f553349436e38564631716e704354334f426955664e6f57654c4449614f42767a43427644414f42674e56485138424166384542414d43417151770a457759445652306c42417777436759494b775942425155484177457744775944565230544151482f42415577417745422f7a416442674e5648513445466751550a474d584f79637a61783232582b5232616251476b79744637772b45775a515944565230524246347758494944596d396967676c7362324e6862476876633353430a41324a76596f494d6347397359584974626a4d74596d396967675231626d6c3467677031626d6c346347466a613256306767646964575a6a623235756877522f0a4141414268784141414141414141414141414141414141414141414268775373464141454d416f4743437147534d343942414d43413067414d4555434951436d0a6c57786b363257647a694f2f67472f4f79304a422f596369734b584a556a515842714f76316a6d7851774967427070524130417536515061486a4b71352b31760a71443343504946777166596a696f5658336f4979595a383d0a2d2d2d2d2d454e442043455254494649434154452d2d2d2d2d0a", "0201036c6e6402f801030a10d1b394c0e9cc01891273b00046d543e21201301a160a0761646472657373120472656164120577726974651a130a04696e666f120472656164120577726974651a170a08696e766f69636573120472656164120577726974651a210a086d616361726f6f6e120867656e6572617465120472656164120577726974651a160a076d657373616765120472656164120577726974651a170a086f6666636861696e120472656164120577726974651a160a076f6e636861696e120472656164120577726974651a140a057065657273120472656164120577726974651a180a067369676e6572120867656e6572617465120472656164000006207aa841cfe8cb1437a58bcb201a1f9f50280b7659a532a7b1675eec5fe4bdffee")
      .await
      .map_err(|_| LightningError::GetPubkeyError)?;

    let pubkey = client
        .get_pubkey()
        .await
        .map_err(|_| LightningError::GetPubkeyError)?;

    println!("pubkey: {}", pubkey);

    let body = Response::builder()
        .status(200)
        .body(pubkey.into())
        .map_err(Box::new)?;

    Ok(body)
}

#[tokio::main]
async fn main() -> Result<(), Error> {
    lambda_http::run(service_fn(|_| get_ln_pubkey())).await
}
